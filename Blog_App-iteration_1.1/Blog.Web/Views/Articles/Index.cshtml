@model IEnumerable<Blog.Infrastructure.Entities.Article>

@{
    ViewData["Title"] = "Articles";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-4">Blog Articles</h1>
        </div>
        <div class="col-md-4 text-end">
            @if (User.Identity.IsAuthenticated && (await UserManager.GetUserAsync(User)).CanWriteArticles)
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New Article
                </a>
            }
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-8">
            <form method="get" class="d-flex gap-2">
                <input type="text" name="searchTerm" class="form-control" placeholder="Search articles..." 
                       value="@Context.Request.Query["searchTerm"]" />
                <select name="dateFilterStr" class="form-select" style="width: auto;">
                    <option value="All" @(ViewBag.CurrentDateFilter == "All" ? "selected" : "")>All Time</option>
                    <option value="Today" @(ViewBag.CurrentDateFilter == "Today" ? "selected" : "")>Today</option>
                    <option value="Week" @(ViewBag.CurrentDateFilter == "Week" ? "selected" : "")>This Week</option>
                    <option value="Month" @(ViewBag.CurrentDateFilter == "Month" ? "selected" : "")>This Month</option>
                    <option value="Year" @(ViewBag.CurrentDateFilter == "Year" ? "selected" : "")>This Year</option>
                </select>
 
                <button type="submit" class="btn btn-outline-primary">
                    <i class="bi bi-search"></i> Search
                </button>
            </form>
        </div>
    </div>

    <div class="row">
        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
        {
            <div class="col-12">
                @if (!Model.Any())
                {
                    <div class="text-center my-5">
                        <div class="display-6 text-muted mb-3">No Articles Found</div>
                        <p class="lead">
                            <span>No articles match your search criteria. Try adjusting your filters or search terms.</span>
                        </p>
                    </div>
                }
                else
                {
                    <h2 class="h4 mb-4">Search Results</h2>
                    @foreach (var item in Model)
                    {
                        <partial name="_ArticleCard" model="item" />
                    }
                }
            </div>
        }
        else
        {
            <div class="col-md-4">
                <div class="mb-4">
                    <h2 class="h4 mb-4">Latest Articles</h2>
                    @foreach (var item in ViewBag.LatestArticles)
                    {
                        <partial name="_ArticleCard" model="item" />
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="mb-4">
                    <h2 class="h4 mb-4">Top Ranked Articles</h2>
                    @foreach (var item in Model.OrderByDescending(a => a.Score).Take(3))
                    {
                        <partial name="_ArticleCard" model="item" />
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="mb-4">
                    <h2 class="h4 mb-4">Recently Commented</h2>
                    @foreach (var item in Model.OrderByDescending(a => a.Comments.Any() ? a.Comments.Max(c => c.CreatedAt) : DateTime.MinValue).Take(3))
                    {
                        <partial name="_ArticleCard" model="item" />
                    }
                </div>
            </div>
        }
    </div>

</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        .intro-text {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            height: 4.5em;
        }
        
        .article-votes {
            display: flex;
            gap: 5px;
            align-items: center;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}