@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<style>
    .profile-picture-container {
        position: relative;
        width: 150px;
        height: 150px;
        margin-bottom: 2rem;
    }

    .profile-picture {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
        border: 3px solid #fff;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .profile-picture-placeholder {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background-color: #e2e8f0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: #64748b;
        text-transform: uppercase;
        font-weight: 600;
    }

    .profile-picture-upload {
        position: absolute;
        bottom: 0;
        right: 0;
        background: #fff;
        border-radius: 50%;
        padding: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        cursor: pointer;
        transition: all 0.2s;
    }

    .profile-picture-upload:hover {
        transform: scale(1.1);
    }

    .profile-picture-preview {
        display: none;
        margin-top: 1rem;
    }

    .file-size-warning {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.5rem;
    }
</style>

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />

<div class="row">
    <div class="col-md-8">
        <form id="profile-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            
            <div class="profile-picture-container">
                @if (string.IsNullOrEmpty(Model.ProfilePicture))
                {
                    <div class="profile-picture-placeholder" id="profilePlaceholder">
                        @(Model.Input.FirstName?.FirstOrDefault().ToString() ?? "")@(Model.Input.LastName?.FirstOrDefault().ToString() ?? "")
                    </div>
                }
                else
                {
                    <img src="@Model.ProfilePicture" alt="Profile Picture" class="profile-picture" id="currentProfilePicture" />
                }
                <label for="ProfilePictureFile" class="profile-picture-upload">
                    <i class="bi bi-camera"></i>
                </label>
                <input type="file" 
                       id="ProfilePictureFile" 
                       name="ProfilePictureFile" 
                       accept="image/jpeg,image/png,image/webp" 
                       style="display: none;"
                       asp-for="Input.ProfilePictureFile" />
            </div>
            
            <div class="profile-picture-preview" id="picturePreview">
                <img id="previewImage" src="#" alt="Preview" style="max-width: 200px; max-height: 200px;" />
                <div class="file-size-warning">
                    Maximum file size: 2MB<br>
                    Supported formats: JPG, PNG, WEBP
                </div>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Username" class="form-control" placeholder="Please choose your username." disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" placeholder="John" />
                <label asp-for="Input.FirstName" class="form-label"></label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.LastName" class="form-control" placeholder="Doe" />
                <label asp-for="Input.LastName" class="form-label"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <script>
        document.getElementById('ProfilePictureFile').addEventListener('change', async function(e) {
            const file = e.target.files[0];
            if (file) {
                // Validate file size (2MB limit)
                const maxSize = 2 * 1024 * 1024;
                if (file.size > maxSize) {
                    alert('File size must not exceed 2MB');
                    this.value = '';
                    return;
                }

                // Validate file type
                const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
                if (!allowedTypes.includes(file.type)) {
                    alert('Only JPG, PNG, and WEBP images are allowed');
                    this.value = '';
                    return;
                }

                // Show preview immediately
                const reader = new FileReader();
                const preview = document.getElementById('picturePreview');
                const previewImage = document.getElementById('previewImage');
                
                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    preview.style.display = 'block';
                    
                    // Update current profile picture if it exists
                    const currentPicture = document.getElementById('currentProfilePicture');
                    if (currentPicture) {
                        currentPicture.src = e.target.result;
                    }
                    
                    // Hide placeholder if it exists
                    const placeholder = document.getElementById('profilePlaceholder');
                    if (placeholder) {
                        placeholder.style.display = 'none';
                    }
                }
                
                reader.readAsDataURL(file);

                // Upload the file
                try {
                    const formData = new FormData();
                    formData.append('profilePicture', file);

                    const response = await fetch('/Profile/UploadProfilePicture', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        throw new Error(errorText);
                    }

                    const result = await response.json();
                    if (result.success) {
                        // Update the profile picture with the new URL from Firebase
                        const currentPicture = document.getElementById('currentProfilePicture');
                        if (currentPicture) {
                            currentPicture.src = result.imageUrl;
                        }
                    }
                } catch (error) {
                    alert('Error uploading profile picture: ' + error.message);
                    console.error('Upload error:', error);
                }
            }
        });
    </script>
}
